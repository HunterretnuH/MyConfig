# nwg-shell Hyprland config file
#
# The nwg-shell-config utility generates a part of settings for you:
# General, Input devices, Touchpad, Dwindle layout, Master layout.
# Decoration, animations, gestures and per-device config are left to be configured by yourself.
# Refer to the Hyprland wiki at https://wiki.hyprland.org for more information.

#
# Monitors & workspaces: nwg-displays generates 2 files, which we include here:
#
source = ~/.config/hypr/monitors.conf
source = ~/.config/hypr/workspaces.conf

#
# Autostart. Feel free to add your own entries.
# Shell components will be started in the includes.conf file, which we include below.
#
exec = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = ~/.azotebg-hyprland # Wallpaper
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

#
# Include settings generated by nwg-shell-config
#
source = ~/.config/hypr/includes.conf

#
# All the settings below are up to you. We don't touch them in the shell config utility.
#

# Some default env vars.t
env = XCURSOR_SIZE,24

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    rounding = 5

    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = false
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
# device:epic-mouse-v1 {
#     sensitivity = -0.5
# }

# Example windowrule v1
windowrule = float, ^(galculator|azote)$
windowrule = float,title:^(Postęp działań na plikach)$
# Example windowrule v2
windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
windowrulev2 = float,title:^(Potwierdzenie zastąpienia plików)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# KEY BINDINGS, see https://wiki.hyprland.org/Configuring/Binds/ for more
# If you happen to change some key bindings, you may also edit ~/.local/share/nwg-shell-config/help-hyprland.pango

# We've defined $term, $editor and so on in includes.conf.
bind = $mainMod,        B,             exec, $browser
bind = $mainMod,        v,             exec, $editor
bind = $mainMod CTRL,   Q,             exec, $exit
bind = $mainMod,        F,             exec, $filemanager
bind = $mainMod,        Space,         exec, $launcher
bind = $mainMod,        RETURN,        exec, $term

# Show/hide the dock, if starten
bind = ALT, D, exec, pkill -10 nwg-dock

bind = $mainMod CTRL,   L,                  exec, nwg-lock              # screen locker, according to shell settings
bind = $mainMod CTRL,   slash,  exec,   nwg-shell-help                  # help window

bind = $mainMod SHIFT,  Space,  fullscreen
bind = $mainMod SHIFT,  I,      pin                                     # stay on top
bind = $mainMod SHIFT,  Q,      killactive,
bind = $mainMod SHIFT,  E,      togglefloating,
bind = $mainMod,        C,      togglegroup
bind = $mainMod SHIFT,  C,      moveoutofgroup
bind = $mainMod,        N,      changegroupactive,      f
bind = $mainMod,        P,      changegroupactive,      b
bind = $mainMod CTRL,   R,      exec,                   hyprctl reload  # reload Hyprland
bind = $mainMod SHIFT,  minus,  movetoworkspace,        special         # move to the special workspace
bind = $mainMod,        minus,  togglespecialworkspace                  # show/hide special workspace

bind = $mainMod,        V,      togglesplit,                            # (dwindle)
bind = $mainMod SHIFT,  E,      pseudo,                                 # (dwindle)
bind = $mainMod,        A,      layoutmsg,              cycleprev       # (master)
bind = $mainMod,        S,      layoutmsg,              swapwithmaster  # (master)
bind = $mainMod,        D,      layoutmsg,              cyclenext       # (master)

# SELECT SPLIT
bind = $mainMod, X, layoutmsg, preselect d
bind = $mainMod, Y, layoutmsg, preselect r

# SCREENSHOT (/usr/local/bin/screenshot)
bind = , Print, exec, screenshot fullscreen                           # full screen
bind = CONTROL, Print, exec, screenshot display                       # focused display
bind = $mainMod SHIFT+CONTROL, Print, exec, screenshot focused        # focused window
bind = SHIFT+CONTROL, Print, exec, grim -g "$(slurp)" - | swappy -f - # selected region -> swappy
# bind = SHIFT+CONTROL, Print, exec, screenshot region                # or selected region w/o swappy

# MOVE FOCUS with mainMod + arrow keys
bind = $mainMod, left, 	movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, 	movefocus, u
bind = $mainMod, down, 	movefocus, d

# MOVE FOCUS with mainMod + hjkl
bind = $mainMod, H, 	movefocus, l
bind = $mainMod, L, 	movefocus, r
bind = $mainMod, K, 	movefocus, u
bind = $mainMod, J, 	movefocus, d

# MOVE FOCUS with mainMod + wsad (for single hand usage when holding mouse)
bind = $mainMod, A, 	movefocus, l
bind = $mainMod, D, 	movefocus, r
bind = $mainMod, W, 	movefocus, u
bind = $mainMod, S, 	movefocus, d

# MOVE WINDOW with mainMod SHIFT + arrow keys
bind = $mainMod SHIFT, left, 	movewindow, l
bind = $mainMod SHIFT, right, 	movewindow, r
bind = $mainMod SHIFT, up, 	    movewindow, u
bind = $mainMod SHIFT, down, 	movewindow, d

# MOVE WINDOW with mainMod SHIFT + hjkl
bind = $mainMod SHIFT, H, 	    movewindow, l
bind = $mainMod SHIFT, L, 	    movewindow, r
bind = $mainMod SHIFT, K, 	    movewindow, u
bind = $mainMod SHIFT, J, 	    movewindow, d

# MOVE WINDOW with mainMod SHIFT + wsad (for single hand usage when holding mouse)
bind = $mainMod SHIFT, A, 	    movewindow, l
bind = $mainMod SHIFT, D, 	    movewindow, r
bind = $mainMod SHIFT, W, 	    movewindow, u
bind = $mainMod SHIFT, S, 	    movewindow, d

# SWITCH WORKSPACES with mainMod + [0-10]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# MOVE ACTIVE WINDOW TO A WORKSPACE with mainMod + SHIFT + [0-10]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# SCROLL THROUGH EXISTING WORKSPACES with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up,   workspace, e-1

# MOVE/RESIZE WINDOWS with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
