# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Always restore open sites when qutebrowser is reopened.
# Type: Bool
c.auto_save.session = True

# Automatically start playing `<video>` elements. Note: On Qt < 5.11,
# this option needs a restart and does not support URL patterns.
# Type: Bool
c.content.autoplay = False

# Which cookies to accept.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
c.content.cookies.accept = 'no-3rdparty'

# Store cookies. Note this option needs a restart with QtWebEngine on Qt
# < 5.9.
# Type: Bool
c.content.cookies.store = False

# Enable JavaScript.
# Type: Bool
c.content.javascript.enabled = False

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.superuser.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.imgur.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.youtube.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.reddit.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.zut.edu.pl/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.pwr.edu.pl/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.duckduckgo.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.pornhub.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.stackoverflow.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.stackexchange.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.mockaroo.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.facebook.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.github.com/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, '*://*.slant.co/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
config.set('content.notifications', False, 'https://www.reddit.com')

# Editor (and arguments) to use for the `open-editor` command. The
# following placeholders are defined: * `{file}`: Filename of the file
# to be edited. * `{line}`: Line in which the caret is found in the
# text. * `{column}`: Column in which the caret is found in the text. *
# `{line0}`: Same as `{line}`, but starting from index 0. * `{column0}`:
# Same as `{column}`, but starting from index 0.
# Type: ShellCommand
c.editor.command = ['kitty', '-e', 'nvim', '{}']

# Position of the tab bar.
# Type: Position
# Valid values:
#   - top
#   - bottom
#   - left
#   - right
c.tabs.position = 'top'
c.tabs.width = '30%'

# Which tab to select when the focused tab is removed.
# Type: SelectOnRemove
# Valid values:
#   - prev: Select the tab which came before the closed one (left in horizontal, above in vertical).
#   - next: Select the tab which came after the closed one (right in horizontal, below in vertical).
#   - last-used: Select the previously selected tab.
c.tabs.select_on_remove = 'prev'

# Bindings for normal mode
config.bind('<Ctrl+Shift+m>', 'hint links spawn mpv --log-file=~~/log {hint-url}')
config.bind('<Ctrl+m>', 'spawn mpv {url}')
config.bind('J', 'tab-prev')
config.bind('K', 'tab-next')
config.bind('tl', 'set tabs.position left ;; bind J tab-next ;; bind K tab-prev')
config.bind('tt', 'set tabs.position top ;; bind J tab-prev ;; bind K tab-next')
config.bind('<Ctrl-Shift-c>,<Ctrl-c>', 'yank')
config.unbind('d')
#config.unbind('D')
#config.bind('D', 'tab-close')


#Bindings for insert mode
config.bind('<Ctrl-Shift-c>', 'yank', mode='caret')
config.bind('<Ctrl-Shift-v>', 'insert-text {clipboard}', mode='insert')

#Bindings for command mode
config.bind('<Ctrl-j>', 'completion-item-focus next', mode='command')
config.bind('<Ctrl-k>', 'completion-item-focus prev', mode='command')
