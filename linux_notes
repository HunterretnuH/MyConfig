#ARCH_INSTALL

ls /usr/share/kbd/keymaps/**/*.map.gz       #check if keymap is avaiable
loadkeys pl                                 #set polish keymap
timedatectl set-ntp true                    #activate ntp deamon which automaticly synchronises time
ip link                                     #shows network interfaces
fdisk -l                                    #lists disks
Udisk /dev/sda                              #opens /dev/sda (device) and lets us create partition etc.
mkfs.ext4 / dev/sdaX                        #formats partition sdaX to ext4 file system
mkswap /dev/sdaX                            #makes sdaX swap partition
swapon /dev/sdaX                            #similar to above
mount /dev/sdaX /mnt                        #mounts sdaX to mountpoint /mnt
pacstrap /mnt base                          #installs base packages. After space more packages can be added i.e.base-devel
genfstab -U /mnt >> /mnt/etc/fstab          #generates fstab file which contains information how things i.e.partitions have to be mounted -U - UUID and -L - labels
arch-chroot /mnt                            #chroot into /mnt - changes root directory for currently running processes and their children
ln -sf /usr/share/zoneinfo/Poland /etc/localtime    #sets timezone
hwclock --systohc                           #Sets the Hardware Clock from the System Clock, and update the timestamps in /etc/adjtime
locale-gen                                  #Generates locales. First uncomment needed locales in /etc/locale.gen file.
echo "LANG=en_US.UTF-8" > /etc/locale.conf  # Creates /etc/locale.conf containing LANG=en_US.UTF-8. Sets locale - used by various programs.
echo "KEYMAP=pl" > /etc/vconsole.conf       #See above. Sets keymap./etc/hosts
echo "myhostname" > etc/hostname            #create network identifier
echo -e "127.0.0.1  localhost\n::1 localhost\n127.0.1.1 myhostname.localdomain  myhostname" > /etc/hosts #creates basic lookup table for hosts
getent hosts                                #check hosts file
mkinitcpio -p linux                         #should be already done by pacstrap. Creates iniramfs - initial ram disks
passwd                                      #set password
exit                                        #exits chroot
umount -R /mnt                              #unmounts devices
pacman -S grub                              #installs grub bootloader
grub-install --targret=i386-pc / dev/sdX    #installs grub to sdX (for GPT filesystem 1MB partition with type BIOS boot have to be created on this device)
grub-mkconfig -o /boot/grub/grub.cfg        #creates basic grub config file
reboot                                      #...
 
#I3_INSTAll

i3 installation:
pacman -S xorg-server, xinit, xterm, i3gaps, ttf-dejavu
locale-gen
 
Modify default /etc/X11/xinit/xinitrc
Remove:
"twm &
xclock -geometry 50x50-1+1 &
xterm -geometry 80x50+494+51 &
xterm -geometry 80x20+494-0 &
exec xterm -geometry 80x66+0+0 -name login"
 
Add:
exec i3
 
User specific xinitrc config:
cp /etc/X11/xinit/xinitrc ~/.xinitrc
Modify as above or as you like. When ~/.xinitrc is present it will be loaded instead of default one by xinit.
 
xinit i3 - starts i3
xinit or startx just runs xinitrc (startx also initializes xauth - to be verified). startx can be opened in vim - it is a shell script.
 
 
To configure xterm:
By default code in xinit script looks for ~/.Xresources, if it does not exist then it looks for/etc/X11/xinit/.Xresources.
 
Simple .Xresources file:
xterm*foreground:white
xterm*background:grey19
 
#GIT
Install git:
pacman -S git
 
To set user and e-mail:
git config --global user.name "Hunter"
git config --global user.email xxx@gmail.com
git config --global core.editor nvim
It will create ~/.gitconfig file if it does not exist and set these variables. For root it also creates file in ~ director.
 
Git first runs /etc/gitconfig and then ~/.gitconfig
 
git config --list                       #to list set variables
git config user.name                    #to check one variables
git config --show-origin user.name      #to show from which file specific setting originate

Saving password
This is saved in plain text but permissions to this file are set so that only user can read and write to it.
It is better to use SSH key.
git config --global credential.helper store  #after this command git will remember the first password that was used (i.e. after git pull) and save it to .git-credentials file).

 
Create some file: echo "This is my first file" >> readme.txt
git status
git add readme.txt
git commit -m "This is my first commit"
 
git remote add origin URL               #to add remote server i.e.github. Later origin = URL
git push -u origin master               #to push branch master to origin. TODO check what exactly -u flag means
 
 
VirtualBox Guest Additions and resolution change:
pacman -S virtualbox-host-modules-arch
 
In windows Vbox folder (Shift+ Right Click > PowerShell): VBoxManage setextradata "Arch Linux" "CustomVideoMode1" "1280x1024x24"
And add kernel parameter you can manually add it to /boot/grub/grub.cfg
Or append video=1280x1024 to GRUB_CMDLINE_LINUX_DEFAULT="splash " in /etc/default/grub and run grub-mkconfig -o /boot/grub/grub.cfg.
To set GRUB Start screen resolution use SET
 
 
#QUTEBROWSER
pacman -S qutebrowser
set J tab-prev
set K tab-next
set editor.command '["xterm", "-e", "nvim {}"]' #to set editor that will be opened after Ctrl + e in insert mode
bind ,v spawn mpv {url} #to bind mpv to key 

For youtube videos:
pacman -S mpv, youtube-dl
command: spawn mpv <url>

 
 
#NEOVIM
set clipboard+=unnamedplus - sets PRIMARY ( " ) register to be default one for yank and paste operations
pacman -S xsel - neovim does not support clipboard without clipboad tool (it worked without tool with gvim)
 
set number      #to show line numbers
set mouse=a     #to allow scrolling with mouse and selection automaticly triggers visual mode
 
 
#CONSOLE
 
Moving the Cursor
 
Use the following shortcuts to quickly move the cursor around the current line while typing a command.
 
    Ctrl+A or Home: Go to the beginning of the line.
    Ctrl+E or End: Go to the end of the line.
    Alt+B: Go left (back) one word.
    Ctrl+B: Go left (back) one character.
    Alt+F: Go right (forward) one word.
    Ctrl+F: Go right (forward) one character.
    Ctrl+XX: Move between the beginning of the line and the current position of the cursor. This allows you to press Ctrl+XX to return to the start of the line, change something, and then press Ctrl+XX to go back to your original cursor position. To use this shortcut, hold the Ctrl key and tap the X key twice.
 
utting and Pasting
 
Bash includes some basic cut-and-paste features.
 
    Ctrl+W: Cut the word before the cursor, adding it to the clipboard.
    Ctrl+K: Cut the part of the line after the cursor, adding it to the clipboard.
    Ctrl+U: Cut the part of the line before the cursor, adding it to the clipboard.
    Ctrl+Y: Paste the last thing you cut from the clipboard. The y here stands for “yank”.
 
I3 configs:

~/.config/i3/config

set $Mod4       #for windows key as mod key
set $left h     #vim movement keys
set $down j
set $up k
set $right l
 
bindsym $mod+y split h  #to split window horizontally
bindsym $mod+x split v  #to split window vertically
 
#new bindings for resizing
bindsym $left resize grow left 10px or 10ppt
bindsym $down resize grow down 10px or 10ppt
bindsym $up resize grow up 10px or 10ppt
bindsym $right resize grow right 10px or 10ppt
 
bindsym Shift+$left resize shrink left 10px or 10ppt
bindsym Shift+$down resize shrink down 10px or 10ppt
bindsym Shift+$up resize shrink up 10px or 10ppt
bindsym Shift+$right resize shrink right 10px or 10ppt
 
 
 
#other things:
Instalacja interception tools i caps2esc wraz ze skrótem budowania paczek AUR
poprawki w plikach init.vim i .vimrc, ewentualnie ustawienia coc.nvim dla ccls i instalacja ccls
Instalacja easymotion i config
 
Do zrobienia:
Fuzzy finder-vim integration
Nerd-Tree



#SUDO
pacman -S sudo
visudo 					#to edit /etc/sudoers
uncomment "# %wheel ALL=(ALL) ALL" 	#to let group wheel use sudo (all permisions)
usemod -aG wheel <username> 		#to user to group wheel. -a (append) used only together with -G (group list)

#SU
Used to realy switch to another account. If run without argument it will switch to root.
It seems that I'm logged as root only in terminal that I used this command in (I need to read how exactly it works).

#AUR
Easiest way to install package from AUR without downloading new package manager or enabling it in pacman (possible?) is:

git clone https://aur.archlinux.org/package_name.git
cd package_name
makepkg -si 					#-s synces, resolves and installs dependancies (when package is from AUR dependancies have to be installed manually) -i install package if it is build succesfully

#CAPS2ESC
I had to install 2 packages from AUR: interception-tools 0.1.1-6 and interception-caps2esc 0.1.3-2.

I checked code of interception-caps2esc and it is realy simple program.
I didn't check code of interception tools.

To build it fakeroot from base-devel package was needed.

We need to create configuration file for udevmon(interception-tools program):
Any location is ok, but default was said to be /etc/udevmon.yaml (still it needs to be given as argument).

Contain for udevmon.yaml for caps2esc:
- JOB: "intercept -g $DEVNODE | caps2esc | uinput -d $DEVNODE"
  DEVICE:
    EVENTS:
      EV_KEY: [KEY_CAPSLOCK, KEY_ESC]

Command to start udevmon with high priority (terminal can be closed later):
sudo nice -n -20 udevmon -c /etc/udevmon.yaml >udevmon.log 2>udevmon.err
I should add it to bashrc.

